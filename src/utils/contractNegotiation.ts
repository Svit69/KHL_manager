import { Player } from '../types/player';
import { PlayerUtils } from './playerUtils';

export interface ContractOffer {
  playerId: string;
  teamId: string;
  salaryOffer: number;
  contractLength: number; // –≤ –≥–æ–¥–∞—Ö
  contractType: 'one-way' | 'two-way';
}

export interface NegotiationResult {
  isAccepted: boolean;
  confidence: number;
  reasons: string[];
  counterOffer?: {
    salary: number;
    contractLength: number;
  };
  category: 'accepted' | 'rejected' | 'counter';
}

export class ContractNegotiation {
  
  // –†–∞—Å—á–µ—Ç –æ–∂–∏–¥–∞–µ–º–æ–π –∑–∞—Ä–ø–ª–∞—Ç—ã –∏–≥—Ä–æ–∫–∞
  static calculateExpectedSalary(player: Player): number {
    const age = PlayerUtils.calculateAge(player.birthDate);
    const rating = player.overallRating;

    // –ë–∞–∑–æ–≤–∞—è –∑–∞—Ä–ø–ª–∞—Ç–∞ –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ä–µ–π—Ç–∏–Ω–≥–∞ (–±–æ–ª–µ–µ —Ä–µ–∞–ª–∏—Å—Ç–∏—á–Ω–∞—è —Ñ–æ—Ä–º—É–ª–∞)
    let baseSalary;
    if (rating >= 80) {
      baseSalary = rating * 0.6 + 15; // 80 —Ä–µ–π—Ç–∏–Ω–≥ = 63 –º–ª–Ω
    } else if (rating >= 75) {
      baseSalary = rating * 0.5 + 5; // 75 —Ä–µ–π—Ç–∏–Ω–≥ = 42.5 –º–ª–Ω
    } else if (rating >= 70) {
      baseSalary = rating * 0.4; // 70 —Ä–µ–π—Ç–∏–Ω–≥ = 28 –º–ª–Ω
    } else {
      baseSalary = rating * 0.25; // 65 —Ä–µ–π—Ç–∏–Ω–≥ = 16.25 –º–ª–Ω
    }

    // –ú–æ–¥–∏—Ñ–∏–∫–∞—Ç–æ—Ä –≤–æ–∑—Ä–∞—Å—Ç–∞
    let ageModifier = 1.0;
    if (age <= 23) {
      ageModifier = 0.6; // –ú–æ–ª–æ–¥—ã–µ –∏–≥—Ä–æ–∫–∏ –∑–Ω–∞—á–∏—Ç–µ–ª—å–Ω–æ –¥–µ—à–µ–≤–ª–µ
    } else if (age <= 27) {
      ageModifier = 0.9; // –ü–∏–∫ –∫–∞—Ä—å–µ—Ä—ã, –Ω–æ –Ω–µ –ø–µ—Ä–µ–ø–ª–∞—á–∏–≤–∞–µ–º
    } else if (age <= 30) {
      ageModifier = 1.0; // –û–ø—ã—Ç–Ω—ã–µ –∏–≥—Ä–æ–∫–∏
    } else if (age <= 33) {
      ageModifier = 0.8; // –ù–∞—á–∏–Ω–∞—é—Ç –¥–µ—à–µ–≤–µ—Ç—å
    } else {
      ageModifier = 0.5; // –í–µ—Ç–µ—Ä–∞–Ω—ã –∑–Ω–∞—á–∏—Ç–µ–ª—å–Ω–æ –¥–µ—à–µ–≤–ª–µ
    }

    const expectedSalary = baseSalary * ageModifier;

    // –ú–∏–Ω–∏–º—É–º 3 –º–ª–Ω, –º–∞–∫—Å–∏–º—É–º 120 –º–ª–Ω
    return Math.max(3, Math.min(120, Math.round(expectedSalary)));
  }
  
  // –û—Ü–µ–Ω–∫–∞ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –∫–æ–Ω—Ç—Ä–∞–∫—Ç–∞ –∏–≥—Ä–æ–∫–æ–º
  static evaluateContractOffer(player: Player, offer: ContractOffer): NegotiationResult {
    const age = PlayerUtils.calculateAge(player.birthDate);
    const expectedSalary = this.calculateExpectedSalary(player);
    const reasons: string[] = [];
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –∫–æ–º–∞–Ω–¥–∞ –≤ –ª—é–±–∏–º—ã—Ö –∫–ª—É–±–∞—Ö
    const isFavoriteTeam = player.favoriteClubs.includes(offer.teamId);
    
    // –†–∞—Å—á–µ—Ç —Ä–∞–∑–Ω–∏—Ü—ã –≤ –∑–∞—Ä–ø–ª–∞—Ç–µ
    const salaryDifference = offer.salaryOffer - expectedSalary;
    const salaryRatio = offer.salaryOffer / expectedSalary;
    
    // –ë–∞–∑–æ–≤–∞—è –æ—Ü–µ–Ω–∫–∞ –Ω–∞ –æ—Å–Ω–æ–≤–µ –∑–∞—Ä–ø–ª–∞—Ç—ã (–±–æ–ª–µ–µ –≥–∏–±–∫–∞—è —Å–∏—Å—Ç–µ–º–∞)
    let baseScore = 0;
    if (salaryRatio >= 1.1) {
      baseScore = 80; // –û—Ç–ª–∏—á–Ω–æ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ
      reasons.push(`üí∞ –û—Ç–ª–∏—á–Ω–∞—è –∑–∞—Ä–ø–ª–∞—Ç–∞: ${offer.salaryOffer} –º–ª–Ω (–æ–∂–∏–¥–∞–ª ~${expectedSalary} –º–ª–Ω)`);
    } else if (salaryRatio >= 0.95) {
      baseScore = 65; // –•–æ—Ä–æ—à–µ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ
      reasons.push(`üíµ –°–ø—Ä–∞–≤–µ–¥–ª–∏–≤–∞—è –∑–∞—Ä–ø–ª–∞—Ç–∞: ${offer.salaryOffer} –º–ª–Ω (–æ–∂–∏–¥–∞–ª ~${expectedSalary} –º–ª–Ω)`);
    } else if (salaryRatio >= 0.75) {
      baseScore = 45; // –ü—Ä–∏–µ–º–ª–µ–º–æ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ
      reasons.push(`üí∏ –ó–∞—Ä–ø–ª–∞—Ç–∞ –Ω–∏–∂–µ –æ–∂–∏–¥–∞–Ω–∏–π: ${offer.salaryOffer} –º–ª–Ω (–æ–∂–∏–¥–∞–ª ~${expectedSalary} –º–ª–Ω)`);
    } else if (salaryRatio >= 0.6) {
      baseScore = 25; // –ù–∏–∑–∫–æ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ, –Ω–æ –º–æ–∂–Ω–æ —Ç–æ—Ä–≥–æ–≤–∞—Ç—å—Å—è
      reasons.push(`üìâ –ù–∏–∑–∫–∞—è –∑–∞—Ä–ø–ª–∞—Ç–∞: ${offer.salaryOffer} –º–ª–Ω (–æ–∂–∏–¥–∞–ª ~${expectedSalary} –º–ª–Ω)`);
    } else {
      baseScore = 10; // –û—á–µ–Ω—å –Ω–∏–∑–∫–æ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ
      reasons.push(`üö´ –ù–µ–ø—Ä–∏–µ–º–ª–µ–º–æ –Ω–∏–∑–∫–∞—è –∑–∞—Ä–ø–ª–∞—Ç–∞: ${offer.salaryOffer} –º–ª–Ω (–æ–∂–∏–¥–∞–ª ~${expectedSalary} –º–ª–Ω)`);
    }
    
    // –ë–æ–Ω—É—Å –∑–∞ –ª—é–±–∏–º—É—é –∫–æ–º–∞–Ω–¥—É
    if (isFavoriteTeam) {
      baseScore += 25;
      reasons.push(`‚ù§Ô∏è –õ—é–±–∏–º–∞—è –∫–æ–º–∞–Ω–¥–∞: –≥–æ—Ç–æ–≤ –ø—Ä–∏–Ω—è—Ç—å –º–µ–Ω—å—à—É—é –∑–∞—Ä–ø–ª–∞—Ç—É`);
    }
    
    // –ú–æ–¥–∏—Ñ–∏–∫–∞—Ç–æ—Ä –¥–ª–∏–Ω—ã –∫–æ–Ω—Ç—Ä–∞–∫—Ç–∞ (–±–æ–ª–µ–µ –≥–∏–±–∫–∞—è —Å–∏—Å—Ç–µ–º–∞)
    let contractModifier = 0;
    const preferredLength = this.getPreferredContractLength(age);
    const lengthDifference = Math.abs(offer.contractLength - preferredLength);

    if (age <= 25) {
      // –ú–æ–ª–æ–¥—ã–µ –∏–≥—Ä–æ–∫–∏ (16-25 –ª–µ—Ç): –ø—Ä–µ–¥–ø–æ—á–∏—Ç–∞—é—Ç 2-3 –≥–æ–¥–∞
      if (offer.contractLength >= 1 && offer.contractLength <= 3) {
        contractModifier = 10 - (lengthDifference * 3); // –®—Ç—Ä–∞—Ñ –∑–∞ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏–µ –æ—Ç –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏–π
        if (offer.contractLength === 2 || offer.contractLength === 3) {
          reasons.push(`üìù –û–ø—Ç–∏–º–∞–ª—å–Ω–∞—è –¥–ª–∏–Ω–∞ –∫–æ–Ω—Ç—Ä–∞–∫—Ç–∞ –¥–ª—è –º–æ–ª–æ–¥–æ–≥–æ –∏–≥—Ä–æ–∫–∞`);
        } else {
          reasons.push(`üìù –ü—Ä–∏–µ–º–ª–µ–º–∞—è –¥–ª–∏–Ω–∞ –∫–æ–Ω—Ç—Ä–∞–∫—Ç–∞`);
        }
      } else if (offer.contractLength >= 4) {
        contractModifier = -15;
        reasons.push(`üìù –°–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω—ã–π –∫–æ–Ω—Ç—Ä–∞–∫—Ç –¥–ª—è –º–æ–ª–æ–¥–æ–≥–æ –∏–≥—Ä–æ–∫–∞`);
      }
    } else if (age >= 26 && age <= 29) {
      // –ò–≥—Ä–æ–∫–∏ –≤ —Ä–∞—Å—Ü–≤–µ—Ç–µ —Å–∏–ª (26-29 –ª–µ—Ç): –≥–∏–±–∫–∏–µ, –ø—Ä–µ–¥–ø–æ—á–∏—Ç–∞—é—Ç 2-4 –≥–æ–¥–∞
      if (offer.contractLength >= 2 && offer.contractLength <= 4) {
        contractModifier = 8 - (lengthDifference * 2);
        reasons.push(`üìù –ü–æ–¥—Ö–æ–¥—è—â–∞—è –¥–ª–∏–Ω–∞ –∫–æ–Ω—Ç—Ä–∞–∫—Ç–∞ –¥–ª—è –∏–≥—Ä–æ–∫–∞ –≤ —Ä–∞—Å—Ü–≤–µ—Ç–µ —Å–∏–ª`);
      } else if (offer.contractLength === 1) {
        contractModifier = -5;
        reasons.push(`üìù –ö–æ—Ä–æ—Ç–∫–∏–π –∫–æ–Ω—Ç—Ä–∞–∫—Ç, –Ω–æ –º–æ–∂–Ω–æ —Ä–∞—Å—Å–º–æ—Ç—Ä–µ—Ç—å`);
      } else {
        contractModifier = -10;
        reasons.push(`üìù –ù–µ–ø–æ–¥—Ö–æ–¥—è—â–∞—è –¥–ª–∏–Ω–∞ –∫–æ–Ω—Ç—Ä–∞–∫—Ç–∞`);
      }
    } else if (age >= 30 && age <= 33) {
      // –û–ø—ã—Ç–Ω—ã–µ –∏–≥—Ä–æ–∫–∏ (30-33 –≥–æ–¥–∞): –ø—Ä–µ–¥–ø–æ—á–∏—Ç–∞—é—Ç 1-2 –≥–æ–¥–∞
      if (offer.contractLength === 1 || offer.contractLength === 2) {
        contractModifier = 12;
        reasons.push(`üìù –ò–¥–µ–∞–ª—å–Ω–∞—è –¥–ª–∏–Ω–∞ –∫–æ–Ω—Ç—Ä–∞–∫—Ç–∞ –¥–ª—è –æ–ø—ã—Ç–Ω–æ–≥–æ –∏–≥—Ä–æ–∫–∞`);
      } else if (offer.contractLength === 3) {
        contractModifier = 0;
        reasons.push(`üìù –ü—Ä–∏–µ–º–ª–µ–º–∞—è –¥–ª–∏–Ω–∞ –∫–æ–Ω—Ç—Ä–∞–∫—Ç–∞`);
      } else {
        contractModifier = -12;
        reasons.push(`üìù –°–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω—ã–π –∫–æ–Ω—Ç—Ä–∞–∫—Ç –¥–ª—è –∏–≥—Ä–æ–∫–∞ —ç—Ç–æ–≥–æ –≤–æ–∑—Ä–∞—Å—Ç–∞`);
      }
    } else {
      // –í–µ—Ç–µ—Ä–∞–Ω—ã (34+ –ª–µ—Ç): –ø—Ä–µ–¥–ø–æ—á–∏—Ç–∞—é—Ç 1 –≥–æ–¥
      if (offer.contractLength === 1) {
        contractModifier = 15;
        reasons.push(`üìù –û–ø—Ç–∏–º–∞–ª—å–Ω–∞—è –¥–ª–∏–Ω–∞ –∫–æ–Ω—Ç—Ä–∞–∫—Ç–∞ –¥–ª—è –≤–µ—Ç–µ—Ä–∞–Ω–∞`);
      } else if (offer.contractLength === 2) {
        contractModifier = -5;
        reasons.push(`üìù –ù–µ–º–Ω–æ–≥–æ –¥–ª–∏–Ω–Ω–æ–≤–∞—Ç–æ, –Ω–æ –º–æ–∂–Ω–æ —Ä–∞—Å—Å–º–æ—Ç—Ä–µ—Ç—å`);
      } else {
        contractModifier = -20;
        reasons.push(`üìù –°–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω—ã–π –∫–æ–Ω—Ç—Ä–∞–∫—Ç –¥–ª—è –≤–µ—Ç–µ—Ä–∞–Ω–∞`);
      }
    }
    
    // –ú–æ–¥–∏—Ñ–∏–∫–∞—Ç–æ—Ä —Ç–∏–ø–∞ –∫–æ–Ω—Ç—Ä–∞–∫—Ç–∞
    let typeModifier = 0;
    if (player.overallRating >= 75 && offer.contractType === 'two-way') {
      typeModifier = -15;
      reasons.push(`üìã Two-way –∫–æ–Ω—Ç—Ä–∞–∫—Ç –Ω–µ–ø–æ–¥—Ö–æ–¥—è—â–∏–π –¥–ª—è –∏–≥—Ä–æ–∫–∞ —Ç–∞–∫–æ–≥–æ —É—Ä–æ–≤–Ω—è`);
    } else if (player.overallRating < 70 && offer.contractType === 'one-way') {
      typeModifier = 10;
      reasons.push(`üìã One-way –∫–æ–Ω—Ç—Ä–∞–∫—Ç - —Ö–æ—Ä–æ—à–∞—è –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å`);
    }
    
    const finalScore = Math.max(0, Math.min(100, baseScore + contractModifier + typeModifier));
    
    // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç (–±–æ–ª–µ–µ –≥–∏–±–∫–∏–µ –ø–æ—Ä–æ–≥–∏)
    if (finalScore >= 65) {
      return {
        isAccepted: true,
        confidence: finalScore,
        reasons: [`‚úÖ –ü—Ä–∏–Ω–∏–º–∞—é –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ!`, ...reasons],
        category: 'accepted'
      };
    } else if (finalScore >= 30) {
      // –ö–æ–Ω—Ç—Ä–ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ (–±–æ–ª–µ–µ —Ä–µ–∞–ª–∏—Å—Ç–∏—á–Ω–æ–µ –∏ –≥–∏–±–∫–æ–µ)
      let counterSalary;
      if (isFavoriteTeam) {
        counterSalary = Math.round(expectedSalary * 0.9); // –°–∫–∏–¥–∫–∞ –¥–ª—è –ª—é–±–∏–º–æ–π –∫–æ–º–∞–Ω–¥—ã
      } else if (salaryRatio >= 0.8) {
        counterSalary = Math.round(expectedSalary * 1.05); // –ù–µ–±–æ–ª—å—à–∞—è –Ω–∞–¥–±–∞–≤–∫–∞
      } else {
        counterSalary = Math.round(expectedSalary * 0.95); // –ì–æ—Ç–æ–≤ –Ω–µ–º–Ω–æ–≥–æ —Å–Ω–∏–∑–∏—Ç—å –æ–∂–∏–¥–∞–Ω–∏—è
      }

      // –ë–æ–ª–µ–µ –≥–∏–±–∫–∞—è –ª–æ–≥–∏–∫–∞ –¥–ª—è –¥–ª–∏–Ω—ã –∫–æ–Ω—Ç—Ä–∞–∫—Ç–∞
      const contractRange = this.getAcceptableContractRange(age);
      let counterLength;

      if (offer.contractLength < contractRange.min) {
        // –ü—Ä–µ–¥–ª–æ–∂–∏–ª–∏ —Å–ª–∏—à–∫–æ–º –∫–æ—Ä–æ—Ç–∫–∏–π –∫–æ–Ω—Ç—Ä–∞–∫—Ç
        counterLength = contractRange.min;
      } else if (offer.contractLength > contractRange.max) {
        // –ü—Ä–µ–¥–ª–æ–∂–∏–ª–∏ —Å–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω—ã–π –∫–æ–Ω—Ç—Ä–∞–∫—Ç
        counterLength = contractRange.max;
      } else {
        // –î–ª–∏–Ω–∞ –≤ –ø—Ä–∏–µ–º–ª–µ–º–æ–º –¥–∏–∞–ø–∞–∑–æ–Ω–µ, –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º –ø—Ä–µ–¥–ø–æ—á—Ç–∏—Ç–µ–ª—å–Ω—É—é
        counterLength = contractRange.preferred;
      }

      return {
        isAccepted: false,
        confidence: finalScore,
        reasons: [`ü§ù –ì–æ—Ç–æ–≤ –∫ –ø–µ—Ä–µ–≥–æ–≤–æ—Ä–∞–º`, ...reasons],
        counterOffer: {
          salary: counterSalary,
          contractLength: counterLength
        },
        category: 'counter'
      };
    } else {
      return {
        isAccepted: false,
        confidence: finalScore,
        reasons: [`‚ùå –û—Ç–∫–ª–æ–Ω—è—é –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ`, ...reasons],
        category: 'rejected'
      };
    }
  }
  
  // –ü–æ–ª—É—á–∏—Ç—å –ø—Ä–µ–¥–ø–æ—á—Ç–∏—Ç–µ–ª—å–Ω—É—é –¥–ª–∏–Ω—É –∫–æ–Ω—Ç—Ä–∞–∫—Ç–∞ –ø–æ –≤–æ–∑—Ä–∞—Å—Ç—É
  static getPreferredContractLength(age: number): number {
    if (age <= 25) {
      return 2; // –ú–æ–ª–æ–¥—ã–µ –ø—Ä–µ–¥–ø–æ—á–∏—Ç–∞—é—Ç 2-3 –≥–æ–¥–∞, –±–µ—Ä–µ–º —Å—Ä–µ–¥–Ω–µ–µ
    } else if (age <= 29) {
      return 3; // –ò–≥—Ä–æ–∫–∏ –≤ —Ä–∞—Å—Ü–≤–µ—Ç–µ —Å–∏–ª –ø—Ä–µ–¥–ø–æ—á–∏—Ç–∞—é—Ç 2-4 –≥–æ–¥–∞
    } else if (age <= 33) {
      return 1; // –û–ø—ã—Ç–Ω—ã–µ –∏–≥—Ä–æ–∫–∏ –ø—Ä–µ–¥–ø–æ—á–∏—Ç–∞—é—Ç 1-2 –≥–æ–¥–∞
    } else {
      return 1; // –í–µ—Ç–µ—Ä–∞–Ω—ã –ø—Ä–µ–¥–ø–æ—á–∏—Ç–∞—é—Ç 1 –≥–æ–¥
    }
  }

  // –ü–æ–ª—É—á–∏—Ç—å –¥–∏–∞–ø–∞–∑–æ–Ω –ø—Ä–∏–µ–º–ª–µ–º–æ–π –¥–ª–∏–Ω—ã –∫–æ–Ω—Ç—Ä–∞–∫—Ç–∞
  static getAcceptableContractRange(age: number): { min: number; max: number; preferred: number } {
    if (age <= 25) {
      return { min: 1, max: 4, preferred: 2 }; // –ú–æ–ª–æ–¥—ã–µ: 1-4 –≥–æ–¥–∞, –ø—Ä–µ–¥–ø–æ—á–∏—Ç–∞—é—Ç 2
    } else if (age <= 29) {
      return { min: 1, max: 5, preferred: 3 }; // –†–∞—Å—Ü–≤–µ—Ç —Å–∏–ª: 1-5 –ª–µ—Ç, –ø—Ä–µ–¥–ø–æ—á–∏—Ç–∞—é—Ç 3
    } else if (age <= 33) {
      return { min: 1, max: 3, preferred: 1 }; // –û–ø—ã—Ç–Ω—ã–µ: 1-3 –≥–æ–¥–∞, –ø—Ä–µ–¥–ø–æ—á–∏—Ç–∞—é—Ç 1
    } else {
      return { min: 1, max: 2, preferred: 1 }; // –í–µ—Ç–µ—Ä–∞–Ω—ã: 1-2 –≥–æ–¥–∞, –ø—Ä–µ–¥–ø–æ—á–∏—Ç–∞—é—Ç 1
    }
  }

  // –ü–æ–ª—É—á–∏—Ç—å —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ–º–æ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –¥–ª—è –∏–≥—Ä–æ–∫–∞
  static getRecommendedOffer(player: Player, teamId: string): ContractOffer {
    const age = PlayerUtils.calculateAge(player.birthDate);
    const expectedSalary = this.calculateExpectedSalary(player);
    const isFavoriteTeam = player.favoriteClubs.includes(teamId);

    // –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º–∞—è –∑–∞—Ä–ø–ª–∞—Ç–∞ (—á—É—Ç—å –≤—ã—à–µ –æ–∂–∏–¥–∞–µ–º–æ–π)
    const recommendedSalary = Math.round(expectedSalary * (isFavoriteTeam ? 1.05 : 1.15));

    // –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º–∞—è –¥–ª–∏–Ω–∞ –∫–æ–Ω—Ç—Ä–∞–∫—Ç–∞ –Ω–∞ –æ—Å–Ω–æ–≤–µ –≤–æ–∑—Ä–∞—Å—Ç–∞
    const recommendedLength = this.getPreferredContractLength(age);

    // –¢–∏–ø –∫–æ–Ω—Ç—Ä–∞–∫—Ç–∞
    const contractType = player.overallRating >= 70 ? 'one-way' : 'two-way';

    return {
      playerId: player.id,
      teamId,
      salaryOffer: recommendedSalary,
      contractLength: recommendedLength,
      contractType
    };
  }
}
